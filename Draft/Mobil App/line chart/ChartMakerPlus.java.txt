//#####package
package uk.co.metricrat.chartmakerplus;
//#####
//#####imports
import android.util.Log;

import android.webkit.*;
import com.google.appinventor.components.annotations.SimpleFunction;
import com.google.appinventor.components.runtime.AndroidNonvisibleComponent;
import com.google.appinventor.components.runtime.Component;
import com.google.appinventor.components.runtime.ComponentContainer;
import com.google.appinventor.components.runtime.WebViewer;
import com.google.appinventor.components.runtime.util.YailList;
import gnu.commonlisp.lang.*;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

import static org.acra.ACRA.LOG_TAG;
//#####
public class ChartMakerPlus extends AndroidNonvisibleComponent implements Component {

    //##### private ComponentContainer container;


    public ChartMakerPlus(ComponentContainer container) {
        super(container.$form());
    }
    //#####

    //##### builds pie chart
    @SimpleFunction(description = "Creates a pie chart from a title string and input lists of data, " +
            "in the WebViewer passed as the final argument. Provides for adding options, gives slice selection feedback and controls zoom")
    public void PieChart(Object webViewer, String arrayTable, String title, boolean zoom, String extraOptions) {
        WebView webView;
        if (webViewer instanceof WebViewer) {
            webView = (WebView) ((WebViewer)webViewer).getView();
        } else {
            webView = (WebView)webViewer;
        }

        String zoomMeta ;
        String filePath ;
        if (!zoom) {
            zoomMeta = "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\n";
        } else {
            zoomMeta = "\n";
        }

        try {
            String htmlCode = "<html>\n" +
                    "          <head>\n" +
                               zoomMeta +
                    "          <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n" +
                    "          <script type=\"text/javascript\">\n" + "\n" +
                    "          google.charts.load('current', {'packages':['corechart']});\n" + "\n" +
                    "          google.charts.setOnLoadCallback(drawChart);\n" + "\n" +
                    
                    "          function drawChart() {\n" + "\n" +
                    "          var data = google.visualization.arrayToDataTable(" + arrayTable +");\n" + "\n" +
                    "          var options = {" +
                    "                       title: '" + title + "',\n" +
                    "                       legend: 'bottom',\n" +

                                            extraOptions + "};\n" +
                                           
                    "          var chart = new google.visualization.PieChart(document.getElementById('pie_chart'));\n" +
                    "          chart.draw(data, options);\n" +

                    "          google.visualization.events.addListener(chart, 'select', selectHandler);" + "\n" +

                    "          function selectHandler() {"  + "\n" +
                    "          var selection = chart.getSelection()[0];"  + "\n" +
                    "          var value = data.getValue(selection.row, 0) + \", \" + data.getValue(selection.row, 1);"  + "\n" +
                    "          window.AppInventor.setWebViewString(value);"  + "\n" +
                    "           }\n" +
                    "           }\n" +

                    "          </script>\n" +
                    "          </head>\n" + "\n" +
                    
                    "          <body>\n" +
                    "          <div id=\"pie_chart\"  style=\"width: 100%; height: 100%;\"></div>\n" +
                    "          </body>\n" +
                    "          </html>" ;
            
            File file = File.createTempFile("display", ".html");
            filePath = file.getAbsolutePath();
            FileWriter filewriter = new FileWriter(file);
            filewriter.write(htmlCode);
            filewriter.close();

            if(webViewer instanceof WebViewer){
                ((WebViewer) webViewer).GoToUrl("file://" + filePath);
            } else {
                ((WebView) webViewer).loadUrl("file://" + filePath);
            }
            file.deleteOnExit();


        } catch (IOException e) {
            Log.e(LOG_TAG, "IOException", e);
        }



    }
    //#####

    //##### builds bar chart
    @SimpleFunction(description = "Creates a bar chart from a title string and input lists of data "  +
            " and displays the chart in the WebViewer passed as the final argument. Provides for adding options, gives bar selection feedback and controls zoom")
    public void BarChart(Object webViewer, String arrayTable, String title, boolean zoom, String extraOptions) {
        WebView webView;
        if (webViewer instanceof WebViewer) {
            webView = (WebView) ((WebViewer)webViewer).getView();
        } else {
            webView = (WebView)webViewer;
        }

        String zoomMeta ;
        String filePath ;
        if (!zoom) {
            zoomMeta = "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\n";
        } else {
            zoomMeta = "\n";
        }

        try {
            String htmlCode = "<html>\n" +
                    "          <head>\n" +
								zoomMeta +
                    "          <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n" +
                    "          <script type=\"text/javascript\">\n" + "\n" +
                    "          google.charts.load('current', {'packages':['corechart']});\n" + "\n" +
                    "          google.charts.setOnLoadCallback(drawChart);\n" + "\n" +

                    "          function drawChart() {\n" + "\n" +
                    "          var data = google.visualization.arrayToDataTable(" + arrayTable +");\n" + "\n" +
                    "          var options = {" +
                    "                       title: '" + title + "',\n" +
                    "                       legend: 'bottom',\n" +

											extraOptions + "};\n" +

                    "          var chart = new google.visualization.BarChart(document.getElementById('bar_chart'));\n" +
                    "          chart.draw(data, options);\n" +

                    "          google.visualization.events.addListener(chart, 'select', selectHandler);" + "\n" +

                    "          function selectHandler() {"  + "\n" +
                    "          var selection = chart.getSelection()[0];"  + "\n" +
                    "          var value = data.getValue(selection.row, 0) + \", \" + data.getValue(selection.row, 1);"  + "\n" +
                    "          window.AppInventor.setWebViewString(value);"  + "\n" +
                    "           }\n" +
                    "           }\n" +

                    "          </script>\n" +
                    "          </head>\n" + "\n" +

                    "          <body>\n" +
                    "          <div id=\"bar_chart\"  style=\"width: 100%; height: 100%;\"></div>\n" +
                    "          </body>\n" +
                    "          </html>" ;

            File file = File.createTempFile("display", ".html");
            filePath = file.getAbsolutePath();
            FileWriter filewriter = new FileWriter(file);
            filewriter.write(htmlCode);
            filewriter.close();

            if(webViewer instanceof WebViewer){
                ((WebViewer) webViewer).GoToUrl("file://" + filePath);
            } else {
                ((WebView) webViewer).loadUrl("file://" + filePath);
            }
            file.deleteOnExit();


        } catch (IOException e) {
            Log.e(LOG_TAG, "IOException", e);
        }



    }
    //#####

    //##### builds column chart
    @SimpleFunction(description = "Creates a column chart from a title string and input lists of data " +
            " and displays the chart in the WebViewer passed as the final argument. Provides for adding options, gives column selection feedback and controls" +
            " zoom")
    public void ColumnChart(Object webViewer, String arrayTable, String title, boolean zoom, String extraOptions) {
        WebView webView;
        if (webViewer instanceof WebViewer) {
            webView = (WebView) ((WebViewer)webViewer).getView();
        } else {
            webView = (WebView)webViewer;
        }

        String zoomMeta ;
        String filePath ;
        if (!zoom) {
            zoomMeta = "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\n";
        } else {
            zoomMeta = "\n";
        }

        try {
            String htmlCode = "<html>\n" +
                    "          <head>\n" +
								zoomMeta +
                    "          <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n" +
                    "          <script type=\"text/javascript\">\n" + "\n" +
                    "          google.charts.load('current', {'packages':['corechart']});\n" + "\n" +
                    "          google.charts.setOnLoadCallback(drawChart);\n" + "\n" +

                    "          function drawChart() {\n" + "\n" +
                    "          var data = google.visualization.arrayToDataTable(" + arrayTable +");\n" + "\n" +
                    "          var options = {" +
                    "                       title: '" + title + "',\n" +
                    "                       legend: 'bottom',\n" +

											extraOptions + "};\n" +

                    "          var chart = new google.visualization.ColumnChart(document.getElementById('col_chart'));\n" +
                    "          chart.draw(data, options);\n" +

                    "          google.visualization.events.addListener(chart, 'select', selectHandler);" + "\n" +

                    "          function selectHandler() {"  + "\n" +
                    "          var selection = chart.getSelection()[0];"  + "\n" +
                    "          var value = data.getValue(selection.row, 0) + \", \" + data.getValue(selection.row, 1);"  + "\n" +
                    "          window.AppInventor.setWebViewString(value);"  + "\n" +
                    "           }\n" +
                    "           }\n" +

                    "          </script>\n" +
                    "          </head>\n" + "\n" +

                    "          <body>\n" +
                    "          <div id=\"col_chart\"  style=\"width: 100%; height: 100%;\"></div>\n" +
                    "          </body>\n" +
                    "          </html>" ;

            File file = File.createTempFile("display", ".html");
            filePath = file.getAbsolutePath();
            FileWriter filewriter = new FileWriter(file);
            filewriter.write(htmlCode);
            filewriter.close();

            if(webViewer instanceof WebViewer){
                ((WebViewer) webViewer).GoToUrl("file://" + filePath);
            } else {
                ((WebView) webViewer).loadUrl("file://" + filePath);
            }
            file.deleteOnExit();


        } catch (IOException e) {
            Log.e(LOG_TAG, "IOException", e);
        }



    }
    //#####

    //##### builds table chart
    @SimpleFunction(description = "Creates a table chart from an input list of data, " +
            "and displays in the WebViewer passed as the final argument. Provides for adding options, gives row selection feedback, and controls zoom")
    public void TableChart(Object webViewer, String arrayTable, boolean zoom, boolean rowNumbers, String headerAlign, String cellAlign, String extraOptions, String css) {

        WebView webView;
        if (webViewer instanceof WebViewer) {
            webView = (WebView) ((WebViewer)webViewer).getView();
        } else {
            webView = (WebView)webViewer;
        }

        String zoomMeta ;
        String filePath ;
        if (!zoom) {
            zoomMeta = "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\n";
        } else {
            zoomMeta = "\n";
        }

        try {

            String htmlCode = 	"<html>\n" +
                    "<head>\n" +
                    zoomMeta +
                    "<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n" +
                    "<script type=\"text/javascript\">\n" +
                    "	google.charts.load('current', {'packages':['table']});\n" +
                    "	google.charts.setOnLoadCallback(drawTable);\n" +

                    "function drawTable() {\n" +
                    "	var data = google.visualization.arrayToDataTable(" + arrayTable + ");\n" +

                    "	var table = new google.visualization.Table(document.getElementById('table_div'));\n" +
                    "	table.draw(data, { showRowNumber:" +rowNumbers+ ", width: '100%', height: '100%', cssClassNames: { headerCell: 'customHeader' }," + extraOptions + "} )\n" +

                    "	google.visualization.events.addListener(table, 'select', selectHandler);\n" +

                    "	function selectHandler() {\n" +
                    "		var cols = data.getNumberOfColumns();\n" +
                    "		var selection = table.getSelection()[0];\n" +
                    "		var value = \"\";\n" +
                    "			for (var i=0; i < cols; i++) {\n" +
                    "			value += data.getValue(selection.row,i) + \",\" ;\n" +
                    "			}\n" +
                    "		value = value.slice(0, -1);\n" +

                    "		window.AppInventor.setWebViewString(value);\n" +
                    "	}\n" +
                    "}\n" +
                    "</script>\n" +
                    "<style>\n" +
                    "	.google-visualization-table-td { text-align:" + cellAlign + "!important; }\n" +
                    "	.customHeader { text-align:" + headerAlign + "; }\n" +
                    css +
                    "</style>\n" +
                    "</head>\n" +
                    "<body>\n" +
                    "	<div id=\"table_div\" style = \"width:100%; height:100%;\"></div>\n" +
                    "</body>\n" +
                    "</html>" ;

            File file = File.createTempFile("display", ".html");
            filePath = file.getAbsolutePath();
            FileWriter filewriter = new FileWriter(file);
            filewriter.write(htmlCode);
            filewriter.close();

            if(webViewer instanceof WebViewer){
                ((WebViewer) webViewer).GoToUrl("file://" + filePath);
            } else {
                ((WebView) webViewer).loadUrl("file://" + filePath);
            }
            file.deleteOnExit();


        } catch (IOException e) {
            Log.e(LOG_TAG, "IOException", e);
        }



    }
    //#####

    //##### builds line graph
    @SimpleFunction(description = "Creates a line graph from a main title and input lists, and displays the chart " +
            "in the WebViewer passed as the final argument. Provides for options, click feedback and zoom control")
    public void LineChart( Object webViewer,String arrayTable, String title, boolean zoom, String extraOptions) {

        WebView webView;
        if (webViewer instanceof WebViewer) {
            webView = (WebView) ((WebViewer)webViewer).getView();
        } else {
            webView = (WebView)webViewer;
        }

        String zoomMeta ;
        String filePath ;
        if (!zoom) {
            zoomMeta = "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\">\n";
        } else {
            zoomMeta = "\n";
        }

        try {
            String htmlCode =   "<html>\n" +
                                "<head>\n" +
                                zoomMeta +
                                "<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n" +
                                "<script type=\"text/javascript\">\n" +
                                "      google.charts.load('current', {'packages':['corechart']});\n" +
                                "      google.charts.setOnLoadCallback(drawChart);\n" +

                                "         function drawChart() {\n" +
                                "           var data = google.visualization.arrayToDataTable(" + arrayTable + ");\n" +
                                "           var options = {" +
                                "               title: '" + title + "',\n" +
                                "               legend: { position: 'bottom' },\n" +

                                                extraOptions +

                                "           };\n" +

                                "       var chart = new google.visualization.LineChart(document.getElementById('line_chart'));\n" +
                                "       chart.draw(data, options);\n" +
                                "       google.visualization.events.addListener(chart, 'select', selectHandler);\n" +

                                "       function selectHandler() {\n" +
                                "            var cols = data.getNumberOfColumns();\n" +
                                "            var selection = chart.getSelection()[0];\n" +
                                "               var value = \"\";\n" +
                                "               for (var i=0; i < cols; i++) {\n" +
                                "               value += data.getValue(selection.row,i) + \",\" ;\n" +
                                "               }\n" +
                                "            value = value.slice(0, -1);\n" +

                                "           window.AppInventor.setWebViewString(value);\n" +
                                "       }\n" +
                                "       }\n" +
                                "</script>\n" +
                                "</head>\n" +
                                "<body>\n" +
                                "    <div id=\"line_chart\" style=\"width: 100%; height: 100%;\"></div>\n" +
                                "</body>\n" +
                                "</html>";

            File file = File.createTempFile("display", ".html");
            filePath = file.getAbsolutePath();
            FileWriter filewriter = new FileWriter(file);
            filewriter.write(htmlCode);
            filewriter.close();

            if(webViewer instanceof WebViewer){
                ((WebViewer) webViewer).GoToUrl("file://" + filePath);
            } else {
                ((WebView) webViewer).loadUrl("file://" + filePath);
            }
            file.deleteOnExit();


        } catch (IOException e) {
            Log.e(LOG_TAG, "IOException", e);
        }

    }
    //#####
    
}    
